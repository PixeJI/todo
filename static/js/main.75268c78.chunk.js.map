{"version":3,"sources":["context/todoContext.js","utils/index.js","context/todoReducer.js","types/index.js","context/TodoState.js","components/TodoItem.js","components/TodoList.js","components/AddTask.js","App.js","index.js"],"names":["TodoContext","createContext","setLocalStorage","state","key","localStorage","setItem","JSON","stringify","getLocalStorage","tasks","getItem","parse","action","type","task","payload","id","Date","getTime","newState","sortByTitleReverse","filter","i","currentTask","map","completed","sort","a","b","title","TodoState","props","useReducer","TodoReducer","dispatch","Provider","value","addTask","removeTask","setCurrentTask","updateTask","clearCurrentTask","getTasks","setCompleted","children","TodoItem","description","todoContext","useContext","className","onClick","e","TodoList","useEffect","AddTask","useState","setTask","clear","onChange","target","name","onSubmit","preventDefault","placeholder","required","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75268c78.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst TodoContext = createContext();\n\nexport default TodoContext;\n","\n\nexport const setLocalStorage = (state, key = 'state') => {\n    localStorage.setItem(key, JSON.stringify(state))\n}\nexport const getLocalStorage = (key = 'state') => {\n    const tasks = localStorage.getItem(key) \n    return tasks ? JSON.parse(tasks) : []\n}","import { getLocalStorage, setLocalStorage } from '../utils';\nimport {\n  ADD_TASK,\n  REMOVE_TASK,\n  SET_CURRENT,\n  UPDATE_TASK,\n  CLEAR_TASK,\n  GET_TASKS,\n  SET_COMPLETED\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_TASK: {\n      const task = action.payload;\n      task.id = new Date().getTime();\n      const newState = {\n        ...state,\n        tasks: sortByTitleReverse([task, ...state.tasks]),\n      }\n      setLocalStorage(newState.tasks);\n      return newState\n    }\n    case REMOVE_TASK: {\n      const newState = {\n        ...state,\n        tasks: state.tasks.filter(i => i.id !== action.payload)\n      }\n      setLocalStorage(newState.tasks);\n      return newState\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        currentTask: action.payload\n      }\n    }\n    case UPDATE_TASK: {\n      const newState = {\n        ...state,\n        tasks: sortByTitleReverse(state.tasks.map(task =>\n          task.id === action.payload.id ? action.payload : task\n        ))\n      }\n      setLocalStorage(newState.tasks);\n      return newState\n    }\n    case CLEAR_TASK: {\n      return {\n        ...state,\n        currentTask: null\n      }\n    }\n    case GET_TASKS: {\n      return {\n        ...state,\n        tasks: sortByTitleReverse(getLocalStorage())\n      }\n    }\n    case SET_COMPLETED: {\n      const newState = {\n        ...state,\n        tasks: state.tasks.map(task =>\n          task.id === action.payload.id ? { ...action.payload, completed: !action.payload.completed } : task\n        )\n      };\n      setLocalStorage(newState.tasks);\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst sortByTitleReverse = (tasks) => {\n  tasks.sort((a, b) => {\n    return a.title < b.title ? 1 : -1;\n  })\n  return tasks;\n}\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const CLEAR_TASK = 'CLEAR_TASKK'; \r\nexport const GET_TASKS = 'GET_TASKS'; \r\nexport const SET_COMPLETED = 'SET_COMPLETED'; ","import React, { useReducer } from 'react';\nimport TodoContext from './todoContext';\nimport TodoReducer from './todoReducer';\nimport { \n  ADD_TASK, \n  REMOVE_TASK, \n  SET_CURRENT, \n  UPDATE_TASK,\n  CLEAR_TASK,\n  GET_TASKS,\n  SET_COMPLETED\n} from './../types';\nconst TodoState = props => {\n  const initialState = {\n    tasks: [],\n    currentTask: null\n  };\n  const [state, dispatch] = useReducer(TodoReducer, initialState);\n  const addTask = task => {\n    dispatch({\n      type: ADD_TASK,\n      payload: task\n    });\n  }\n  const removeTask = id => {\n    dispatch({\n      type: REMOVE_TASK,\n      payload: id\n    });\n  }\n  const setCurrentTask = task =>{\n    dispatch({ type: SET_CURRENT, payload: task });\n  }\n  const clearCurrentTask = () => {\n    dispatch({ type: CLEAR_TASK});\n  }\n  const updateTask = task =>{\n    dispatch({ type: UPDATE_TASK, payload: task });\n  }\n  const getTasks = () =>{\n    dispatch({ type: GET_TASKS });\n  }\n  const setCompleted = (task)=>{\n    dispatch({ type: SET_COMPLETED , payload: task});\n  }\n\n  return (\n    <TodoContext.Provider\n      value={{\n        tasks: state.tasks,\n        currentTask: state.currentTask,\n        addTask,\n        removeTask,\n        setCurrentTask,\n        updateTask,\n        clearCurrentTask,\n        getTasks,\n        setCompleted\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoState;\n","import React, { useContext } from 'react';\nimport TodoContext from '../context/todoContext';\nimport './../App.css';\nconst TodoItem = ({ task }) => {\n    const { title, description, id, completed } = task;\n    const todoContext = useContext(TodoContext);\n    const { removeTask, setCurrentTask, setCompleted } = todoContext;\n    const onDelete = e => {\n        removeTask(id);\n    }\n    const onSetCurrent = e => {\n        setCurrentTask(task)\n    }\n    const onComplete = e => {\n        setCompleted(task)\n    }\n    return (\n        <div className=\"card container\">\n            <h3 className='text-left' > {title} </h3>\n            <p className={`${completed ? 'completed' : ''} task-description`}> {description}</p>\n\n            <div className=\"space-between\">\n                <div>\n                    { !completed && (\n                        <div>\n                            <button className='flex btn btn-edit' onClick={onSetCurrent}>Edit</button>\n                            <button className='flex btn btn-complete' onClick={onComplete}> Complete</button>\n                        </div>\n                    )}\n                </div>\n                <button className='btn btn-delete' onClick={onDelete}> Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoItem\n","import React, { useContext, useEffect } from 'react'\nimport TodoItem from './../components/TodoItem';\nimport TodoContext from './../context/todoContext';\nconst TodoList = () => {\n    const todoContext = useContext(TodoContext);\n    const { tasks, getTasks } = todoContext;\n\n    useEffect(() => {\n        getTasks();\n    }, [])\n\n    return (\n        <div className=\"tasks-container\">\n            {\n                tasks.map(task => (\n                    <TodoItem key={task.id} task={task} />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default TodoList\n","import React, { useContext, useState, useEffect } from 'react'\nimport TodoContext from '../context/todoContext'\nimport './../App.css';\n\nconst AddTask = () => {\n    const todoContext = useContext(TodoContext);\n    const { addTask, currentTask, updateTask, clearCurrentTask } = todoContext;\n    const [task, setTask] = useState({\n        title: '',\n        description: '',\n        completed: false\n    });\n\n    useEffect(() => {\n        if (currentTask) {\n            setTask(currentTask)\n        } else {\n            clear()\n        }\n    }, [todoContext, currentTask])\n\n\n    const { title, description } = task;\n\n\n    const onChange = e => {\n        setTask({ ...task, [e.target.name]: e.target.value });\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (currentTask) {\n            updateTask(task);\n            clearCurrentTask();\n        } else {\n            addTask(task);\n        }\n        clear()\n    };\n\n    const clear = () => {\n        setTask({\n            title: '',\n            description: '',\n            completed: false\n        })\n    }\n    return (\n        <form onSubmit={onSubmit} className=\"container task-form\">\n            <input\n                type='text'\n                placeholder='title'\n                name='title'\n                required\n                value={title}\n                onChange={onChange}\n            />\n            <textarea\n                type='text'\n                placeholder='description'\n                name='description'\n                value={description}\n                onChange={onChange}\n            />\n\n            <div>\n                <input\n                    type='submit'\n                    value={currentTask ? 'Update Task' : 'Add Task'}\n                    className='btn btn-add btn-block'\n                />\n            </div>\n            {currentTask && (\n                <div>\n                    <button className='btn btn-cancel btn-block' onClick={() => { clearCurrentTask() }}>Cancel</button>\n                </div>\n            )}\n        </form >\n    )\n}\n\nexport default AddTask\n","import React from 'react';\nimport './App.css';\nimport TodoState from './context/TodoState';\nimport TodoList from './components/TodoList';\nimport AddTask from './components/AddTask';\nconst App = () => {\n  return (\n    <TodoState>\n      <div className=\"app\">\n        <h2 className=\"center\"> Todo list</h2>\n        <div>\n          <AddTask/>\n          <TodoList/>\n        </div>\n      </div>\n    </TodoState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}